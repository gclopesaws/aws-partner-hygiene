#!/bin/bash

# Deploy script para AWS App Runner
# AWS Partner Pipeline Analysis

set -e

# Configura√ß√µes
STACK_NAME="aws-partner-hygiene-apprunner"
REGION="us-east-1"  # Altere se necess√°rio
TEMPLATE_FILE="cloudformation-apprunner-file-config.yaml"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ AWS Partner Pipeline Analysis - App Runner Deploy${NC}"
echo "========================================================="

# Verificar se AWS CLI est√° configurado
check_aws_cli() {
    if ! command -v aws &> /dev/null; then
        echo -e "${RED}‚ùå AWS CLI n√£o encontrado. Instale o AWS CLI primeiro.${NC}"
        exit 1
    fi
    
    if ! aws sts get-caller-identity &> /dev/null; then
        echo -e "${RED}‚ùå AWS CLI n√£o est√° configurado. Execute 'aws configure' primeiro.${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ AWS CLI configurado${NC}"
    
    # Mostrar informa√ß√µes da conta
    ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    USER_ARN=$(aws sts get-caller-identity --query Arn --output text)
    echo -e "${BLUE}üìã Conta AWS: ${ACCOUNT_ID}${NC}"
    echo -e "${BLUE}üë§ Usu√°rio: ${USER_ARN}${NC}"
}

# Fun√ß√£o de deploy
deploy() {
    echo -e "${YELLOW}üì¶ Iniciando deploy do App Runner...${NC}"
    echo ""
    echo "Configura√ß√µes:"
    echo "‚Ä¢ Stack: $STACK_NAME"
    echo "‚Ä¢ Regi√£o: $REGION"
    echo "‚Ä¢ Reposit√≥rio: https://github.com/gclopesaws/aws-partner-hygiene"
    echo "‚Ä¢ Branch: main"
    echo ""
    
    read -p "Continuar com o deploy? (y/N): " confirm
    if [[ $confirm != [yY] ]]; then
        echo -e "${YELLOW}Deploy cancelado.${NC}"
        exit 0
    fi
    
    echo -e "${YELLOW}üî® Executando CloudFormation deploy...${NC}"
    
    aws cloudformation deploy \
        --template-file "$TEMPLATE_FILE" \
        --stack-name "$STACK_NAME" \
        --parameter-overrides \
            AppName="aws-partner-hygiene" \
        --capabilities CAPABILITY_NAMED_IAM \
        --region "$REGION" \
        --no-fail-on-empty-changeset
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Deploy conclu√≠do com sucesso!${NC}"
        
        # Obter URL da aplica√ß√£o
        echo -e "${YELLOW}üîç Obtendo URL da aplica√ß√£o...${NC}"
        SERVICE_URL=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --region "$REGION" \
            --query 'Stacks[0].Outputs[?OutputKey==`AppRunnerServiceUrl`].OutputValue' \
            --output text 2>/dev/null)
        
        if [ -n "$SERVICE_URL" ] && [ "$SERVICE_URL" != "None" ]; then
            echo ""
            echo -e "${GREEN}üéâ Aplica√ß√£o deployada com sucesso!${NC}"
            echo -e "${BLUE}üåê URL: $SERVICE_URL${NC}"
            echo -e "${YELLOW}üí∞ Custo estimado: $30-50/m√™s${NC}"
            echo ""
            echo -e "${BLUE}üìã Pr√≥ximos passos:${NC}"
            echo "1. Aguarde 5-10 minutos para o App Runner fazer o build"
            echo "2. Acesse a URL acima para testar a aplica√ß√£o"
            echo "3. Qualquer push para o branch 'main' far√° deploy autom√°tico"
            echo ""
            echo -e "${BLUE}üìä Monitoramento:${NC}"
            echo "‚Ä¢ Console AWS App Runner: https://console.aws.amazon.com/apprunner/"
            echo "‚Ä¢ CloudWatch Logs: /aws/apprunner/aws-partner-hygiene"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Deploy conclu√≠do, mas URL n√£o dispon√≠vel ainda.${NC}"
            echo "Verifique o console AWS App Runner em alguns minutos."
        fi
    else
        echo -e "${RED}‚ùå Erro no deploy. Verifique os logs acima.${NC}"
        exit 1
    fi
}

# Fun√ß√£o para verificar status
status() {
    echo -e "${BLUE}üìä Verificando status do App Runner...${NC}"
    
    # Verificar se stack existe
    if aws cloudformation describe-stacks --stack-name "$STACK_NAME" --region "$REGION" &>/dev/null; then
        echo -e "${GREEN}‚úÖ Stack encontrada${NC}"
        
        # Obter informa√ß√µes
        SERVICE_URL=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --region "$REGION" \
            --query 'Stacks[0].Outputs[?OutputKey==`AppRunnerServiceUrl`].OutputValue' \
            --output text 2>/dev/null)
        
        SERVICE_ARN=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --region "$REGION" \
            --query 'Stacks[0].Outputs[?OutputKey==`AppRunnerServiceArn`].OutputValue' \
            --output text 2>/dev/null)
        
        echo -e "${BLUE}üåê URL: $SERVICE_URL${NC}"
        echo -e "${BLUE}üìã ARN: $SERVICE_ARN${NC}"
        
        # Verificar status do servi√ßo
        if [ -n "$SERVICE_ARN" ]; then
            SERVICE_STATUS=$(aws apprunner describe-service \
                --service-arn "$SERVICE_ARN" \
                --region "$REGION" \
                --query 'Service.Status' \
                --output text 2>/dev/null)
            
            echo -e "${BLUE}üìä Status: $SERVICE_STATUS${NC}"
        fi
    else
        echo -e "${RED}‚ùå Stack n√£o encontrada. Execute o deploy primeiro.${NC}"
    fi
}

# Fun√ß√£o para deletar
delete() {
    echo -e "${RED}üóëÔ∏è  Deletando recursos...${NC}"
    
    read -p "Tem certeza que deseja deletar todos os recursos? (y/N): " confirm
    if [[ $confirm != [yY] ]]; then
        echo -e "${YELLOW}Opera√ß√£o cancelada.${NC}"
        exit 0
    fi
    
    aws cloudformation delete-stack \
        --stack-name "$STACK_NAME" \
        --region "$REGION"
    
    echo -e "${GREEN}‚úÖ Comando de dele√ß√£o enviado. Recursos ser√£o removidos em alguns minutos.${NC}"
}

# Menu principal
case "${1:-menu}" in
    "deploy")
        check_aws_cli
        deploy
        ;;
    "status")
        check_aws_cli
        status
        ;;
    "delete")
        check_aws_cli
        delete
        ;;
    "menu"|*)
        echo ""
        echo "Uso: $0 [comando]"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  deploy  - Fazer deploy da aplica√ß√£o"
        echo "  status  - Verificar status da aplica√ß√£o"
        echo "  delete  - Deletar todos os recursos"
        echo ""
        echo "Exemplos:"
        echo "  $0 deploy"
        echo "  $0 status"
        echo "  $0 delete"
        echo ""
        ;;
esac